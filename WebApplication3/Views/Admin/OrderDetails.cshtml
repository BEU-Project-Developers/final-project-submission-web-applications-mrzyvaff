@model WebApplication3.Models.Order

@{
    ViewData["Title"] = "Order Details";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Order #@Model.Id Details</h2>
        <a asp-action="Orders" class="btn btn-secondary">Back to Orders</a>
    </div>
    
    <div class="row">
        <div class="col-md-8">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Order Items</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderItems)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <img src="@item.Product.ImageUrl" alt="@item.Product.Name" style="width: 50px; height: 50px; object-fit: cover; margin-right: 10px;">
                                                <span>@item.Product.Name</span>
                                            </div>
                                        </td>
                                        <td>$@item.UnitPrice.ToString("0.00")</td>
                                        <td>@item.Quantity</td>
                                        <td>$@((item.Quantity * item.UnitPrice).ToString("0.00"))</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="3" class="text-end"><strong>Total:</strong></td>
                                    <td><strong>$@Model.TotalAmount.ToString("0.00")</strong></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Order Information</h5>
                </div>
                <div class="card-body">
                    <p><strong>Order Date:</strong> @Model.OrderDate.ToString("MMMM dd, yyyy hh:mm tt")</p>
                    <p>
                        <strong>Status:</strong> 
                        <span class="badge bg-@(GetStatusBadgeClass(Model.Status))">@Model.Status</span>
                    </p>
                    <hr />
                    <h6>Customer Information</h6>
                    <p><strong>Name:</strong> @Model.User.FirstName @Model.User.LastName</p>
                    <p><strong>Email:</strong> @Model.User.Email</p>
                    <p><strong>Delivery Address:</strong> @Model.DeliveryAddress</p>
                    @if (!string.IsNullOrEmpty(Model.Notes))
                    {
                        <hr />
                        <h6>Notes</h6>
                        <p>@Model.Notes</p>
                    }
                </div>
            </div>
            
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Update Status</h5>
                </div>
                <div class="card-body">
                    <form asp-action="UpdateOrderStatus" method="post">
                        <input type="hidden" name="id" value="@Model.Id" />
                        <div class="mb-3">
                            <label class="form-label">Status</label>
                            <select name="status" class="form-select">
                                <option value="Pending" selected="@(Model.Status == "Pending")">Pending</option>
                                <option value="Processing" selected="@(Model.Status == "Processing")">Processing</option>
                                <option value="Shipped" selected="@(Model.Status == "Shipped")">Shipped</option>
                                <option value="Completed" selected="@(Model.Status == "Completed")">Completed</option>
                                <option value="Cancelled" selected="@(Model.Status == "Cancelled")">Cancelled</option>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Update Status</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetStatusBadgeClass(string status)
    {
        return status.ToLower() switch
        {
            "pending" => "warning",
            "processing" => "info",
            "shipped" => "primary",
            "completed" => "success",
            "cancelled" => "danger",
            _ => "secondary"
        };
    }
} 